Project Bluecard STR outline, wants and needs. Version 1.1
This is an app to manage the work life of an esl Teacher (Me - Teacher Paul) and maybe a few friends.
A local database, with everything held locally, but portable (once complete) as an .exe for friends to install and use.

List of sections / forms:
# 1. Dataset_1                       - data/001attendance_data.JSON 
# 2. Metadata                        - list of all data fields for Project Bluecard STR
# 3. Boilerplate                     - Project file Structure for Project Bluecard
# 4. Launcher                        - First form runs from main.py, the entry point. Logic = (Archive = "No")
# 5. Archive Manager                 - Simliar to Launcher but with Archived classes (Archive = "Yes") + Option to DELETE class
# 6. Mainform                        - This form displays bluecard with Student Data PAL and Metadata with control buttons
# 7. ADD or Edit Metadata            - Form for editing metadata
# 7.1 Fields and Default Values (default.json) - EXTENDED TTR Version
#7.2 Fields and Default Values LAYOUT
# 8. Add or EDIT Student information - Form for adding and editing student data
# 9. Student Active Manager - Simliar to Archive manager (active = "Yes" or "No") + Option to DELETE class
# 10. Mapping Settings -> Default values to # 7. ADD or Edit Metadata

----------------------------------------------------------------

TASK: DB Table "Factory_Defaults" and App db table "defaults" with "factory_defaults.json" & "build_sqlite_db"

we are building the backend of my project, "factory_defaults" = json holds raw data to build a db [001attendance.db] via [build_sqlite_db]. [Settings] -> [check factory settings] = checks the data matches between db table "factory_defaults" and "defaults" (this needs updating). I want the project to use "defaults" to control the UI settings, which can be modified and checked and reset to "factory settings". The files added to this chat box, I think are all the previous attempts to centralise this. Basically:

"factory_defaults" = build from json (raw data)
"defaults" = place app looks to check default values, which can be modified and saved here.
"classes" = holds show/hide columns, column_widths, P/A/L/cod/cia/hol colors for individual classes (factory defaults need to be added to "factory defaults" .json )

Task: make a plan to centralise the json, db #, defaults and factory_defaults. Use the defaults to have 1 place for "global" settings. Clean all the other files currently holding defaults, then switch all UI etc to use defaults for GUI fonts, bg fg colors etc.


Centralization Plan: Factory Defaults, Defaults, and App Settings

1. Define the Roles:

factory_defaults.json
The single source of truth for all "factory" (raw/original) settings.
Used only for building the DB and for "reset to factory" operations.
Should include:
All global UI settings (fonts, colors, etc.)
All per-form settings (window sizes, etc.)
All per-class defaults (show/hide columns, column widths, P/A/L/cod/cia/hol colors, etc.)

defaults (DB table)
The only place the app reads for current global settings.
Can be modified by the user (via UI).
Used by all UI for fonts, colors, etc.
form_settings (DB table)
Per-form settings (window size, etc.), loaded from factory_defaults.json at build, but can be changed by the user.

classes (DB table)
Per-class settings (show/hide columns, column widths, colors), with factory defaults loaded at build time.


2. Clean Up and Centralize
Remove all other JSONs and hardcoded defaults from the codebase.
Ensure factory_defaults.json contains everything needed for:
Global settings
Per-form settings
Per-class defaults

3. Update the Build Process
On DB build:
Import all global settings from factory_defaults.json into the defaults table.
Import all per-form settings into the form_settings table.
Import all per-class defaults into the classes table for new classes (or as templates for new classes).
Populate the factory_defaults table in the DB for reference and for "reset to factory" operations.

4. Update the App Logic
All UI and logic should read from the defaults table for global settings (fonts, colors, etc.).
All per-form settings should be read from form_settings.
All per-class settings (show/hide columns, widths, colors) should be read from classes.
When the user resets to factory defaults, copy values from the DB's factory_defaults table back into defaults, form_settings, and (optionally) classes.

5. Provide a Single "Check/Reset" UI
In Settings, provide:
A "Check Factory Defaults" button (compares defaults and form_settings to factory_defaults).
A "Reset to Factory Defaults" button (restores all settings from factory_defaults).

6. Remove Redundancy
Delete all old JSONs and hardcoded defaults after migration.
Document that all new settings must be added to factory_defaults.json.

Summary Table
Source	                Purpose	                    Editable by user?	Used by UI?	   Used for reset?
factory_defaults.json	Raw factory settings	    No	                No	           Yes
factory_defaults (DB)	Reference for reset/check	No	                No	           Yes
defaults (DB)	        Current global settings	    Yes	                Yes   	       Yes
form_settings (DB)	    Current per-form settings	Yes	                Yes	           Yes
classes (DB)	        Per-class settings	        Yes	                Yes	           Yes

Action Steps
1. Expand factory_defaults.json to include all global, per-form, and per-class defaults. ✔
2. Update build_sqlite_db.py to: ✔
3. Populate all relevant DB tables from factory_defaults.json. ✔
4. Ensure factory_defaults table is always up-to-date.
5. Update all UI and logic to use only the defaults table for global settings.
6. Remove all other sources of defaults (old JSONs, hardcoded values).
7. Add/Update Settings UI to allow check/reset to factory defaults.
8. Document the new structure for future development.

----------------------------------------------------------------------------------

"factory_defaults" description for factory_defaults.json

"global": {
  "use_colors": true,                      // Master toggle to enable or disable colors on all forms
  "resizable": "yes",                      // Allow windows to be resized
  "window_controls": "standard",           // Use standard window controls (minimize, maximize, close)
  "form_font_family": "Segoe UI",          // Default font family for all form text

  "title_color": "#1976d2",                // Title text color
  "title_font_size": 14,                   // Title font size in points
  "title_font_bold": true,                 // Title text is bold
  "title_alignment": "left",               // Title is left-aligned

  "subtitle_color": "#1976d2",             // Subtitle text color
  "subtitle_font_size": 12,                // Subtitle font size
  "subtitle_font_bold": false,             // Subtitle is not bold
  "subtitle_alignment": "left",            // Subtitle is left-aligned

  "form_bg_color": "#e3f2fd",                  // Background color of form
  "form_fg_color": "#222222",                  // Text color for form content
  "form_border_color": "#1976d2",              // Border color of the form
  "form_font_size": 12,                        // Font size inside forms
  "form_label_bold": true,                     // Form labels are bold
  "form_label_alignment": "left",              // Form labels are left-aligned
  "form_input_bg_color": "#ffffff",            // Background color of input fields
  "form_input_alignment": "left",              // Input text is left-aligned
  "form_input_field_bold": false,              // Input text is not bold
  "form_input_placeholder_color": "#999999",   // Placeholder text color in inputs (Enter full name here..)
  "form_input_focus_border_color": "#42a5f5",  // Border color when input is focused
  "form_input_disabled_bg_color": "#f0f0f0",   // Input background when disabled
  "form_error_border_color": "#e53935",        // Input border color on error

  "metadata_bg_color": "#e3f2fd",                  // Background color for metadata section
  "metadata_fg_color": "#222222",                  // Text color for metadata
  "metadata_border_color": "#1976d2",              // Border color for metadata section
  "metadata_font_size": 12,                        // Font size in metadata section
  "metadata_label_bold": true,                     // Metadata labels are bold
  "metadata_input_field_bold": false,              // Metadata input text is not bold
  "metadata_input_bg_color": "#ffffff",            // Metadata input field background
  "metadata_input_placeholder_color": "#999999",   // Placeholder color in metadata input (Enter full name here..)
  "metadata_input_focus_border_color": "#42a5f5",  // Border color on metadata input focus
  "metadata_input_disabled_bg_color": "#f0f0f0",   // Metadata input background when disabled
  "metadata_error_border_color": "#e53935",        // Metadata input border color on error

  "table_header_bg_color": "#1976d2",      // Background color for table headers
  "table_header_fg_color": "#ffffff",      // Text color for table headers
  "table_header_border_color": "#1976d2",  // Border color for table headers
  "table_header_font_size": 14,            // Font size for table header text
  "table_header_bold": true,               // Table headers are bold

  "table_bg_color": "#ffffff",             // Background color for table cells
  "table_fg_color": "#222222",             // Text color in table cells
  "table_border_color": "#1976d2",         // Border color for table cells
  "table_font_size": 12,                   // Font size in table cells
  "table_input_field_bold": true,          // Table cell input text is bold
  "table_error_border_color": "#e53935",   // Border color for table cells with error

  "button_bg_color": "#1976d2",            // Button background color
  "button_fg_color": "#ffffff",            // Button text color
  "button_border_color": "#1976d2",        // Button border color
  "button_font_size": 12,                  // Button text font size
  "button_font_bold": false,               // Button text is not bold
  "button_hover_bg_color": "#1565c0",      // Button background on hover
  "button_active_bg_color": "#0d47a1",     // Button background when active/clicked
  "button_error_border_color": "#e53935"   // Button border color on error
},


-----------------------------------------------------------------------

# 1. Dataset_1 - data/001attendance_data.JSON 

{
    "classes": {
        "OLO123": {
            "metadata": {
                "Company": "ACERs",
                "Consultant": "Fraser",
                "Teacher": "Paul R",
                "TeacherNo": "A20049",
                "Room": "Floor 23",
                "CourseBook": "IEX",
                "CourseHours": "40",
                "ClassTime": "2",
                "MaxClasses": "10",
                "StartDate": "01/05/2025",
                "FinishDate": "15/06/2025",
                "Days": "Tuesday, Thursday",
                "Time": "17:00 - 19:00",
                "Notes": "Bring Projector and screen",
                "class_no": "OLO123",
                "rate": "530",
                "ccp": "120",
                "travel": "200",
                "bonus": "1000"
            },
            "students": {
                "S001": {
                    "name": "Alice Kim",
                    "gender": "Female",
                    "nickname": "Ali",
                    "score": "82% - A",
                    "pre_test": "70%",
                    "post_test": "90%",
                    "active": "Yes",
                    "note": "Very punctual and loves discussions",
                    "attendance": {
                        "01/05/2025": "P",
                        "06/05/2025": "A",
                        "08/05/2025": "P",
                        "13/05/2025": "L",
                        "15/05/2025": "P"
                    }
                },
                "S002": {
                    "name": "Ben Lee",
                    "gender": "Male",
                    "nickname": "Nok",
                    "score": "55% - B",
                    "pre_test": "50%",
                    "post_test": "75%",
                    "active": "Yes",
                    "note": "Likes conversations and grammar",
                    "attendance": {
                        "01/05/2025": "L",
                        "06/05/2025": "P",
                        "08/05/2025": "P",
                        "13/05/2025": "A",
                        "15/05/2025": "P"
                    }
                }
            },
            "archive": "No"
        }
    }
}

----------------------------------------------------------------
# 2. Metadata - list of all data fields for Project Bluecard STR

key (Unique Number):
classes = "OLO123"

metadata:
Company = "ACERs",
Consultant = "Fraser",
Teacher = "Paul R",
Room = "Floor 23",
CourseBook = "IEX",
MaxClasses = "10",
CourseHours = "40",
ClassTime = "2",
StartDate = "01/05/2025",
FinishDate = "15/06/2025",
Days = "Tuesday, Thursday",
Time = "17:00 - 19:00",
Notes = "Bring Projector and screen"

Student data:
students = "S001",
name = "Alice Kim",
gender = "Female",
nickname = "Ali",
score = "82% - A",
pre_test = "70%",
post_test = "90%",
active = "Yes",
note = "Very punctual and loves discussions",
attendance = {
"01/05/2025": "P",
"06/05/2025": "A",
"08/05/2025": "P",
"13/05/2025": "L",
"15/05/2025": "P"
}

----------------------------------------------------------------
# 3. Boilerplate - Project file Structure for Project Bluecard

📁 Bluecard_v2/
├── data/
│   ├── 001attendance_data.json
│   ├── 001attendance_data_YYYYMMDD_HHMMSS.json ← (backup with TimeStamp)
│   ├── themes.json ← (from old bluecard)
│   ├── settings.json
│   ├── default.json
│   ├── Project_Outline.txt ← (keep for documentation/reference)
│   └── backup/
│   └── (timestamped .json backups)

├── src/
│   ├── 
│   ├── logic/
│   │   └── parser.py
│   │   
│   └── ui/
│   ├── launcher.py (GUI or interactive launcher in progress)
│   ├── archive_manager.py
│   ├── mainform.py
│   ├── metadata_form.py
│   ├── settings.py
│   └── student_manager.py
│
├── tests/
│   └── test_attendance.py
│
├── .gitignore ← (from old bluecard)
├── main.py
├── requirements.txt
└── README.md 

----------------------------------------------------------------

# 4. Launcher - First form runs from main.py, the entry point. Logic = (Archive = "No")

+-------------------------------------------------------------------------+
|                         **Bluecard Manager**                            |   ← Heading (bold, centered, 24pt)
+---------------------------+---------------------------------+-----------+
|        **Class No**       |          **Company**            |**Archive**|   ← Table Headings (bold, centered, 18pt)
+---------------------------+---------------------------------+-----------+
| OLO123                    | [            ACERs            ] |  [ No ]   |   ← Table Rows label (OLO123, regular, left, 16pt)
| OLO124                    | [            BCERs            ] |  [ No ]   |   ← Table Rows data (ACERs,No, regular, left, 16pt)
+---------------------------+---------------------------------+-----------+   

                [ Open ]   [ Edit ]   [ Add New Class ]                       ← Buttons (regular, centered, 18pt)
          [ Archive ]  [ Archive Manager]   [TTR]  [Settings]

1. Launcher Form and Button format, sequence and logic:
1. Standard Windows 3-button control group (Minimize, Maximize/Restore, Close X).
2. Run, -> main.py -> Launcher (Apply Theme for project eg default, dark, light, clam - Default = "normal") 
3. Launcher opens, centre of screen (hoizonal/vertical), "-topmost" = True.
4. Set geometry ("650x500") but can Restore Window - Only window resizes, not data or table.
5. Close X - Window closes with offer to backup 001attendance_data locally, but will move to Google drive later.

1 .Launcher Button logic:
[ Open ]            →  Must highlight row, → 6. Mainform (Maximize = yes) 
[ Edit ]            →  Must highlight row → 7. ADD or Edit Metadata (Edit highlighted class metadata)
[ Add New Class ]   →  7. ADD or Edit Metadata (Add a new class metadata)                 
[ Archive ]         →  Must highlight row → Basic form with Yes, No, Cancel (Yes = "archive" = "Yes")
[ Archive Manager]  →  5. Archive Manager → Restore ("archive" = "No"), Delete (safety Yes, No), Cancel
[TTR]               →  Placeholder for TTR
[Settings]          →  Basic form with dropdown to select Theme (normal, dark, large, clam) Default = normal

----------------------------------------------------------------

# 5. Archive Manager - Simliar to Launcher but with Archived classes (Archive = "Yes") + Option to DELETE class

+-------------------------------------------------------------------------+
|                         **Archive Manager**                             |   ← Heading (bold, centered, 24pt)
+---------------------------+---------------------------------+-----------+
|        **Class No**       |          **Company**            |**Archive**|   ← Table Headings (bold, centered, 18pt)
+---------------------------+---------------------------------+-----------+
| OLO123                    | [            ACERs            ] |  [ Yes ]  |   ← Table Rows label (OLO123, regular, left, 16pt)
| OLO124                    | [            BCERs            ] |  [ Yes ]  |   ← Table Rows data (ACERs,No, regular, left, 16pt)
+---------------------------+---------------------------------+-----------+   

                [ Restore ]   [ Delete ]   [ Cancel ]                       ← Buttons (regular, centered, 18pt)

5. Archive Manager Form and Button format, sequence and logic:

1. Standard Windows 3-button control group (Minimize, Maximize/Restore, Close X).
2. 1. Launcher -> click Archive Manager -> 5. Archive Manager form (Apply Theme for project eg default, dark, light, clam - Default = "normal") 
3. Launcher opens, centre of screen (hoizonal/vertical), "-topmost" = True.
4. Set geometry ("650x500") but can Restore Window - Only window resizes, not data or table.
5. Close X - Window closes with and re-opens 1. Launcher form.

5. Archive Manager Button logic:
[ Restore ]           → Must highlight row → Basic form with Yes, No, Cancel (Yes = "archive" = "No")
[ Delete ]            → Must highlight row → Basic form with Yes, No, Cancel (Yes = Delete all metadata form class)
[ Cancel ]            → No action, close Archive Manager, open 1. Launcher

----------------------------------------------------------------

# 6. Mainform - This form displays bluecard with Student Data PAL and Metadata with control buttons

+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Header                                                      **Class Information - MainForm**                                                                           |    ← Heading (bold, centered, 20pt)
+----------------+------------------+---------------------+---------------------+-------+--------------------+-------------------+-------------------+-------------------+
|**Company:**    | [    ACERs     ] |**Course Hours:**    | [      40         ] |       | [   Add Student  ] | [   Add Date    ] | [ (Unused Btn2) ] | [ (Unused Btn6) ] |
|**Consultant:** | [    Fraser    ] |**Class Time (hrs):**| [       2         ] |       | [  Edit Student  ] | [   Edit Date   ] | [ (Unused Btn3) ] | [ (Unused Btn7) ] |    ← Buttons (regular, centered, 16pt)
|**Teacher:**    | [    Paul R    ] |**Max Classes:**     | [      10         ] |       | [ Remove Student ] | [    Metadata   ] | [ (Unused Btn4) ] | [ (Unused Btn8) ] |
|**Room:**       | [   Floor 23   ] |**Start Date:**      | [   01/05/2025    ] |       | [Manage Students ] | [ (Unused Btn1) ] | [ (Unused Btn5) ] | [    Settings   ] |    ← Table Rows (Labels) (bold, left, 14pt)
|**Course Book:**| [    IEX       ] |**Finish Date:**     | [   15/06/2025    ] |       |                    |                   |                   |                   |    ← Table Rows (Data) (regular, centered, 14pt)
|                |                  |**Days:**            | [Tuesday, Thursday] |       |                    |                   |                   |                   |
|                |                  |**Time:**            | [  17:00 - 19:00  ] |       |                    |                   |                   |                   | 
|                |                  |**Notes:**           | [ Bring projector ] |       |                    |                   |                   |                   |
+----------------+------------------+---------------------+---------------------+-------+--------------------+-------------------+-------------------+-------------------+
| Attendance Table                                                                                                                                                       |    ← Heading (bold, left, 20pt)
+---+---------------+------------+----------+------------+------------+------------+------------+------------+-----+-----+-----+--------------+------------+-------------+
| # | **Name**      |**Nickname**|**Score** |**01/05/25**|**06/05/25**|**08/05/25**|**13/05/25**|**15/05/25**|**P**|**A**|**L**|**Attendance**|**Pre-test**|**Post-test**|  ← Table Headings (bold, centered, 16pt)
+---+---------------+------------+----------+------------+------------+------------+------------+------------+-----+-----+-----+--------------+------------+-------------+
|   |Running Total  |            |          |     2      |     4      |     6      |     8      |    10      |     |     |     |              |            |             |  ← Running Total (Data 2,4,6) (bold, centered, 14pt)
| 1 |Alice Kim      |    Ali     |  82% - A |     P      |     A      |     P      |     L      |    P       |  3  |  1  |  1  |              |    70%     |     90%     |  ← Table Rows (Data) (regular, centered, 14pt)
| 2 |Ben Lee        |    Nok     |  55% - B |     L      |     P      |     P      |     A      |    P       |  3  |  1  |  1  |              |    50%     |     75%     |
| 3 | ...           |    ...     |   ...    |     -      |     -      |     -      |     -      |    -       |  -  |  -  |  -  |              |     -      |     -       |
| 4 | ...           |    ...     |   ...    |     -      |     -      |     -      |     -      |    -       |  -  |  -  |  -  |              |     -      |     -       |
+---+---------------+------------+----------+------------+------------+------------+------------+------------+-----+-----+-----+--------------+------------+-------------+


+---+---------------+-----------+------------+-----------+-------------+--------------+-----+-----+-----+------------+------------+------------+------------+------------+
| # | Name          | Nickname  | Score      | Pre-test  | Post-test   | Attendance   | P   | A   | L   | 01/05/25   | 06/05/25   | 08/05/25   | 13/05/25   | 15/05/25   |
+---+---------------+-----------+------------+-----------+-------------+--------------+-----+-----+-----+------------+------------+------------+------------+------------+
|   | Running Total |           |            |           |             |              |  2  |  4  |  6  |     2      |     4      |     6      |     8      |    10      |
+---+---------------+-----------+------------+-----------+-------------+--------------+-----+-----+-----+------------+------------+------------+------------+------------+
| 1 | Alice Kim     | Ali       | 82% - A    | 70%       | 90%         |              |  3  |  1  |  1  |     P      |     A      |     P      |     L      |     P      |
| 2 | Ben Lee       | Nok       | 55% - B    | 50%       | 75%         |              |  3  |  1  |  1  |     L      |     P      |     P      |     A      |     P      |
| 3 | ...           | ...       | ...        | ...       | ...         |              |  -  |  -  |  -  |     -      |     -      |     -      |     -      |     -      |
| 4 | ...           | ...       | ...        | ...       | ...         |              |  -  |  -  |  -  |     -      |     -      |     -      |     -      |     -      |
+---+---------------+-----------+------------+-----------+-------------+--------------+-----+-----+-----+------------+------------+------------+------------+------------+



6. 9 x column layout (Font 14)

Column 1: (label) + Column 2: (data)
Company: (ACERs)
Consultant: (Fraser)
Teacher: (Paul R)
Room: (Floor 23)
CourseBook: (IEX)

Column 3: (label) + Column 4: (data)
CourseHours: (40)
ClassTime: (2)
MaxClasses: (10)
StartDate: (01/05/2025)
FinishDate: (01/07/2025)
Days: (Tuesday, Thursday)
Time: (17:00 - 19:00)
Notes: (Bring Projector)

Column 5:
"Blank"

Column 6:- Buttons
[ Add Student ]
[ Edit Student ]
[ Remove Student ]
[ Manage Students ]

Column 7:
[ Add Date ]
[ Edit Date ]
[ Metadata ]
[ Unused 1]

Column 8:
[ Unused 2 ]
[ Unused 3 ]
[ Unused 4 ]
[ Unused 5 ]

Column 9:
[ Unused 6 ]
[ Unused 7 ]
[ Unused 8 ]
[ Unused 9 ]

+---------------+-----------------+-----------------+-----------------+
| col 1 (label) | col2 (metadata) | col4 (label)    | col4 (metadata) | 
| "Company*:"   | "Company"       | "Course Hours:" | "CourseHours"   |                | 
| "Room:"       | "Room"          | "StartDate"     | "StartDate"     |                | 
| "Consultant:" | "Consultant"    | "Finish Date:"  |  "FinishDate"   | 
| "Teacher:"    | "Teacher"       | "Days:"         | "Days"          |                | 
| "CourseBook:" | "CourseBook"    | "Time:"         | "Time"          |                | 
+---------------+-----------------+-----------------+-----------------+
| "Notes:"      | "Notes"                                             |                | 
+---------------+-----------------------------------------------------+

Column 1: Labels

6. Mainform and Button format, sequence and logic:

1. Standard Windows 3-button control group (Minimize, Maximize/Restore, Close X).
2. 1. Launcher -> click Open (with highlighted row) -> 6. Mainform (Apply Theme for project eg default, dark, light, clam - Default = "normal") 
3. 6. Mainform opens, maximized, "-topmost" = True.
4. Close X - Window closes with and re-opens 1. Launcher form.

6. Mainform layout and button logic:
Header -> 9 columns as shown in table above.
Column 1 (bold, left), Column 2 (regular, centered), Column 3 (bold, left), Column 4 (regular, centered), Column 5 (blank spacer)
Column 6 (Buttons x 4), Column 7 (Buttons x 4), Column 8 (Buttons x 4), Column 9 (Buttons x 4). 

6. Attendance Table → layout as per diagram (each entry can be editted by double clicking on the table for a simple form to edit and save on exit or close form)
6. Attendance Table → Logic filter for table, Name = order ascending, Filter "active" = "Yes".

6. Button logic: (dont close mainform when any button is pressed unless stated below)
[   Add Student  ]   → Mainform remains open and 8. Add or EDIT Student information opens to ADD NEW Student
[  Edit Student  ]   → Mainform remains open and 8. Add or EDIT Student information opens to EDIT Student metadata
[ Remove Student ]   → Must highlight row, basic form Remove student Yes/No. Yes = "active" = "No", refresh form
[ Manage Students]   → opens 9. Student Active Manager → X Close back to Mainform (dont close mainform)
[   Add Date    ]    → Add Placeholder for now
[   Edit Date   ]    → Add Placeholder for now
[    Metadata   ]    → Add Placeholder for now
[ (Unused Btn1) ]    → Add Placeholder for now
[ (Unused Btn2) ]    → Add Placeholder for now
[ (Unused Btn2) ]    → Add Placeholder for now
[ (Unused Btn3) ]    → Add Placeholder for now
[ (Unused Btn4) ] 	 → Add Placeholder for now
[ (Unused Btn5) ]    → Add Placeholder for now
[ (Unused Btn6) ]    → Add Placeholder for now
[ (Unused Btn7) ]    → Add Placeholder for now
[ (Unused Btn8) ]    → Add Placeholder for now
[    Settings   ]    → Same 1. Launcher → Basic form with dropdown to select Theme (normal, dark, large, clam) Default = normal

----------------------------------------------------------------

# 7. ADD or Edit Metadata - Form for editing metadata

+-----------------------------------------------------------+
|           Add / Edit Class Information (metadata)         |      ← Heading (bold, centered, 24pt)
+-------------------------+---------------------------------+
|                         |                                 |      ← Heading Blank (bold, centered, 18pt)
+-------------------------+---------------------------------+
|**Class No:**            | [            OLO123           ] |      ← Data (labels **Days**, bold, centered, 18pt)
+-------------------------+---------------------------------+
|**Company:**             | [             ACERs           ] |      ← Data ((ACERs), regular, centered, 18pt)
+-------------------------+---------------------------------+
|**Consultant:**          | [            Fraser           ] | 
+-------------------------+---------------------------------+
|**Teacher:**             | [            Paul R           ] |
+-------------------------+---------------------------------+
|**Room:**                | [          Building 2         ] |    
+-------------------------+---------------------------------+
|**CourseBook:**          | [             IEX             ] |
+-------------------------+---------------------------------+
|**CourseHours:**         | [             40              ] | 
+-------------------------+---------------------------------+
|**ClassTime:**           | [             2               ] |                  
+-------------------------+---------------------------------+
|**MaxClasses:**          | [             10              ] |         
+-------------------------+---------------------------------+
|**StartDate:**           | [          01/05/2025         ] | [ Pick ]  ← Button (bold, centered, 16pt)         
+-------------------------+---------------------------------+
|**FinishDate:**          | [          01/10/2025         ] | [ Pick ]  ← Button (bold, centered, 16pt)
+-------------------------+---------------------------------+
					            M, T, W, Th, F, Sa, Su          ← Heading (bold, centered, 24pt)
                                O  O  O  O  O  O  O             ← Tickbox (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)
+-------------------------+---------------------------------+
|**Days:**                | [       Tuesday, Thursday     ] | [ Clear ]  ← Button (bold, centered, 16pt) ← Data ((Tuesday, Thursday), regular, centered, 18pt)
+-------------------------+---------------------------------+   
|**Time:**                | [         17:00 - 19:00       ] |       ← Data (labels **Days**, bold, centered, 18pt)
+-------------------------+---------------------------------+  
|**Notes:**               | [Bring Projector              ] |       ← Data ((Bring Projector), regular, left, 18pt)
+-------------------------+---------------------------------+

                  [ Save ]  [ Cancel ]      ← Buttons (bold, centered, 18pt)

7. 7. ADD or Edit Metadata Button format, sequence and logic:
1. Standard Windows 3-button control group (Minimize, Maximize/Restore, Close X).
2. 6. Mainform -> click Metaform -> 7. ADD or Edit Metadata (EDIT data and Apply Theme for project eg default, dark, light, clam - Default = "normal") 
3. Launcher opens, centre of screen (hoizonal/vertical), "-topmost" = True.
4. Set geometry ("650x650") but can Restore Window - Only window resizes, not data or table.
5. Close X - Window closes with and re-opens 6. Mainform.

7. 7. ADD or Edit Metadata Button logic
[ Save ]        → Saves data from from into 001attendance_data, form closes and refresh mainform
[ Cancel ]      → No changes, close the form

# 7.1 Fields and Default Values (default.json) - EXTENDED TTR Version

Columns 1 & 2:
("Class No*:", "class_no"),
("Company*:", "Company"),
("Room:", "Room"),
("Consultant:", "Consultant"),
("Teacher:", "Teacher"),
("CourseBook:", "CourseBook"),
("Notes:", "Notes"),

Column 3:
[pick] -> tkcaldendar for [StartDate]

Columns 4 & 5
("Course Hours:", "CourseHours"),
("Class Time:", "ClassTime"),
("Start Date:", "StartDate"),
("Finish Date:", "FinishDate"),
("Days:", "Days"),
("Time:", "Time"),
Add. <------ line separator ---------->
Add. text = "Added variables for TTR data"
Add. <------ line separator ---------->
("Max Classes:", "MaxClasses"),
("Teacher No:", "TeacherNo"),
("Rate:", "rate"),
("CCP:", "ccp"),
("Travel:", "travel"),
("Bonus:", "bonus")

#7.2 Fields and Default Values LAYOUT

| col 1 (label) | col2 (data)  | col4 (label)    | col4 (label)  | col5 (buttons) | 
| "Class No*:"  | "class_no"   | "Course Hours:" | "CourseHours" |                | 
| "Company*:"   | "Company"    | "Class Time:"   | "ClassTime"   |                | 
| "Room:"       | "Room"       | "Start Date:"   | "StartDate"   | [pick]         | 
| "Consultant:" | "Consultant" | "Finish Date:"  | "FinishDate"  |                | 
| "Teacher:"    | "Teacher"    | "Days:"         | "Days"        |                | 
| "CourseBook:" | "CourseBook" | "Time:"         | "Time"        |                | 
| "Notes:"      | "Notes"      | "Max Classes:"  | "MaxClasses"  |                | 
|               |              | "Teacher No:"   | "TeacherNo"   |                | 
|               |              | "Rate:"         | "rate"        |                | 
|               |              | "CCP:"          | "ccp"         |                | 
|               |              | "Travel:"       | "travel"      |                | 
|               |              | "Bonus:"        | "bonus"       |                | 

----------------------------------------------------------------

# 8. Add or EDIT Student information - Form for adding and editing student data

+-----------------------------------------------------------+
|            Add /  Edit Student Information                |      
+-------------------------+---------------------------------+      
|**Name:**                | [          Alice Kim          ] |     
+-------------------------+---------------------------------+
|**Nickname:**            | [            Ali              ] | 
+-------------------------+---------------------------------+
|**Company No:**          | [           D123456           ] |
+-------------------------+---------------------------------+
|**Gender:**              | [    male    ]   [   female   ] |      
+-------------------------+---------------------------------+
|**Score:**               | [          82% - A            ] |    
+-------------------------+---------------------------------+
|**PreTest:**             | [             70%             ] |
+-------------------------+---------------------------------+
|**PostTest:**            | [             90%             ] | 
+-------------------------+---------------------------------+
|**Note:**                | [Very punctual                ] |                     
+-------------------------+---------------------------------+
|**Active**               | [     Yes    ]   [     No     ] |       
+-------------------------+---------------------------------+

                  [ Save ]  [ Cancel ] [Bulk Import]   

8. Add or EDIT Student information and Button format, sequence and logic:
1. Standard Windows 3-button control group (Minimize, Maximize/Restore, Close X).
2. Launcher -> mainform -> Edit Student (Apply Theme for project eg default, dark, light, clam - Default = "normal") 
3. 8. Add or EDIT Student information, centre of screen (hoizonal/vertical), "-topmost" = True.
4. Set geometry ("650x500") but can Restore Window - Only window resizes, not data or table.
5. Close X - Window closes form back to mainform, refresh data.


Gender [    male    ]   [   female   ]    →   Toggle switch between male/female - Default = "female"
Active [     Yes    ]   [     No     ]    →   Toggle switch between male/female - Default = "Yes"

----------------------------------------------------------------

# 9. Student Active Manager - Simliar to Archive manager (active = "Yes" or "No") + Option to DELETE class

+-------------------------------------------------------------------------+
|                       **Student Active Manager**                        |   ← Heading (bold, centered, 24pt)
+-----------------------+------------+-------------------------+----------+
|        **Name**       |**Nickname**|        **Note**         |**Active**|   ← Table Headings (bold, centered, 18pt)
+-----------------------+------------+-------------------------+----------+
| Alice Kim             | [   AL   ] |                         | [ Yes ]  |   ← Table Rows label (OLO123, regular, left, 16pt)
| Ben Lee               | [  Nok   ] |                         |  [ No ]  |   ← Table Rows data (ACERs,No, regular, left, 16pt)
+-----------------------+------------+-------------------------+----------+   

       [Edit]     [ Toggle Active Status ]   [ Delete Student ]   [ Close ]         ← Buttons (regular, centered, 18pt)


9. Student Active Manager and Button format, sequence and logic:
1. Standard Windows 3-button control group (Minimize, Maximize/Restore, Close X).
2. Run, -> main.py -> Launcher (Apply Theme for project eg default, dark, light, clam - Default = "normal") 
3. Launcher opens, centre of screen (hoizonal/vertical), "-topmost" = True.
4. Set geometry ("650x500") but can Restore Window - Only window resizes, not data or table.
5. Close X - Window closes with offer to backup 001attendance_data locally, but will move to Google drive later.

9. Student Active Manager and Button logic
[Edit]            → Open 8. Add or EDIT Student information, close back to 9. Student Active Manager
[ Active ]        → Set "active" = "Yes"
[ not Active ]    → Set "active" = "No"
[ Delete ]        → Must highlight row, Delete student Yes/No (safety)
[ Cancel ]        → No changes, close form back to mainform

----------------------------------------------------------------

# 10. Mapping Settings -> Default values to # 7. ADD or Edit Metadata

File Location: /data/default.json  
Field Mapping: Launcher -> Settings to Launcher -> Add Class (metadata)

metadata      = default.json
"Teacher"     = "def_teacher" (Paul R),
"TeacherNo"   = "def_teacher_no" (A20049),
"CourseHours" = "def_course_hours" (40),
"ClassTime"   = "def_class_time" (2),
"rate"        = "def_rate" (520"),
"ccp"         = "def_ccp" (120),
"travel"      = "def_travel" (200),
"bonus"       = "def_bonus" (1000)